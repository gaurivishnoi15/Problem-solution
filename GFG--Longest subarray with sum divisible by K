class Solution:
	def longSubarrWthSumDivByK (self,arr,  n, K) :
	    remainder_dict = {0: -1}
        max_length = 0
        current_sum = 0
 
        for i in range(n):
            current_sum += arr[i]
            remainder = current_sum % K
 
            # If the remainder is negative, add K to make it positive
            if remainder < 0:
                remainder += K
 
            if remainder in remainder_dict:
                # If the same remainder is found, update the maximum length
                max_length = max(max_length, i - remainder_dict[remainder])
            else:
                # If the remainder is not in the dictionary, add it with its current index
                remainder_dict[remainder] = i
 
        return max_length
