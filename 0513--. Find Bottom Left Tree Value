# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def findBottomLeftValue(self, root: Optional[TreeNode]) -> int:
        from collections import defaultdict
        depth=defaultdict(list)
        max_d=-1
        def dfs(node,d):
            if not node:
                return
            nonlocal max_d
            max_d=max(max_d,d)
            depth[d].append(node.val)
            dfs(node.left,d+1)
            dfs(node.right,d+1)

        dfs(root,0)
        return depth[max_d][0]
        
